"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/store/agencyStore.ts":
/*!**********************************!*\
  !*** ./src/store/agencyStore.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useAgencyStore: function() { return /* binding */ useAgencyStore; }\n/* harmony export */ });\n/* harmony import */ var zustand__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zustand */ \"./node_modules/zustand/esm/index.mjs\");\n/* harmony import */ var _apiConfigStore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiConfigStore */ \"./src/store/apiConfigStore.ts\");\n\n\n/**\n * Store for managing comprehensive agency data from Supabase\n */ const useAgencyStore = (0,zustand__WEBPACK_IMPORTED_MODULE_1__.create)((set, get)=>({\n        agencies: [],\n        agencyNames: [],\n        isLoading: false,\n        error: null,\n        fetchAgencyData: async ()=>{\n            const baseUrl = _apiConfigStore__WEBPACK_IMPORTED_MODULE_0__.useApiConfigStore.getState().baseUrl;\n            if (!baseUrl) {\n                set({\n                    error: \"API base URL not configured\"\n                });\n                return;\n            }\n            try {\n                set({\n                    isLoading: true,\n                    error: null\n                });\n                // Fetch comprehensive data from the agency-data endpoint\n                const response = await fetch(\"\".concat(baseUrl, \"/api/agency-data\"));\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch agency data: \".concat(response.statusText));\n                }\n                const data = await response.json();\n                console.log(\"data\", data);\n                if (data.agencies && Array.isArray(data.agencies)) {\n                    console.log(\"Received \".concat(data.agencies.length, \" agencies from API\"));\n                    // Transform the response to our standardized format\n                    const processedAgencies = data.agencies.map((agency)=>{\n                        // Initialize the wordCounts object\n                        const wordCounts = {};\n                        // Extract word counts for each year\n                        if (agency.word_count) {\n                            // Process each date key (e.g., \"2023-03-01\")\n                            Object.keys(agency.word_count).forEach((dateKey)=>{\n                                const yearData = agency.word_count[dateKey];\n                                if (yearData && typeof yearData.wordcount === \"number\") {\n                                    // Extract just the year from the date (e.g., \"2023\")\n                                    const year = dateKey.split(\"-\")[0];\n                                    // Store the wordcount for that year\n                                    wordCounts[year] = yearData.wordcount;\n                                }\n                            });\n                        }\n                        // Calculate number of sub-agencies (length of child_slug_id array)\n                        const subAgencies = Array.isArray(agency.child_slug_id) ? agency.child_slug_id.length : 0;\n                        return {\n                            name: agency.name,\n                            uuid: agency.agency_uuid,\n                            subAgencies,\n                            parentSlugId: agency.parent_slug_id,\n                            hasChildren: agency.has_child_agencies,\n                            wordCounts: Object.keys(wordCounts).length > 0 ? wordCounts : {},\n                            displayName: agency.display_name,\n                            shortName: agency.short_name\n                        };\n                    });\n                    const agencyNames = processedAgencies.map((agency)=>agency.name);\n                    set({\n                        agencies: processedAgencies,\n                        agencyNames,\n                        isLoading: false\n                    });\n                    console.log(\"Complete agency data processed:\", processedAgencies.length);\n                } else {\n                    throw new Error(\"Invalid response format: agencies array not found\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching agency data:\", error);\n                set({\n                    error: error instanceof Error ? error.message : \"Unknown error occurred\",\n                    isLoading: false\n                });\n            }\n        },\n        // Helper function to get word count for a specific agency and year\n        getWordCountForYear: (agencyName, year)=>{\n            const { agencies } = get();\n            const agency = agencies.find((a)=>a.name === agencyName);\n            if (!agency || !agency.wordCounts || !agency.wordCounts[year]) {\n                return null;\n            }\n            return agency.wordCounts[year];\n        },\n        // Helper function to get number of sub-agencies for an agency\n        getSubAgencyCount: (agencyName)=>{\n            const { agencies } = get();\n            const agency = agencies.find((a)=>a.name === agencyName);\n            if (!agency) {\n                return null;\n            }\n            return agency.subAgencies;\n        }\n    }));\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/store/agencyStore.ts\n"));

/***/ })

});